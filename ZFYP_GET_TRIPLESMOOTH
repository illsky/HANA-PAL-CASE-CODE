create procedure SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH(
IN  PARA_ID NVARCHAR(36),
IN  SQLWHERE string,
in FSTNUM varchar(6),
IN alpha double,
in BETA double,
in GAMMA double,
in AUTO integer
)
language sqlscript 
AS BEGIN
/*
Reviced by Tian Geng 
2014.10.10 
三重平滑预测方法，该方法中自动得到ALPHA,BETA,GAMMA参数的值
*/

DECLARE SQL_STR CLOB;
declare l_count integer default 1;
declare PARA_INDEX integer :=1;
declare L_COUNT_REAL integer;
declare L_alpha double;
declare L_beta double;
declare L_gamma double;
declare l_rid integer;
declare l_KZSPXSSL integer;
DECLARE L_FSTNUM INTEGER;
declare L_AUTO INTEGER;
DECLARE MESSAGE VARCHAR(50);   
DECLARE PARA_ARRAY NVARCHAR(36) ARRAY  ;
DECLARE MODE_ARRAY integer ARRAY ;
DECLARE DIGIT_ARRAY decimal ARRAY  ;
DECLARE CHARV_ARRAY nvarchar(100) ARRAY  ; 

CREATE LOCAL TEMPORARY COLUMN TABLE #LS_PARA LIKE  sinopec_ypxs.Z1ZB_SFCS;
IF :PARA_ID <> '' 
THEN
--如果参数ID有输入时
SQL_STR := 'insert into #LS_PARA SELECT b.CSMS,b.CSZLX, b.DIGTV,b.CHARV from sapsr3.Z1ZB_SFCS_FYP a,sapsr3.Z1ZB_SFCS_FYP_mx b where a.SFCS_ID = '||:PARA_ID||' and a.SFCS_ID = b.SFCS_ID';
exec SQL_STR;

LS_PARA = select CSMS,CSZLX,DIGTV,CHARV from  #LS_PARA;

--根据参数ID取得参数信息；
   PARA_ARRAY := ARRAY_AGG(:LS_PARA.CSMS);  
   MODE_ARRAY := ARRAY_AGG(:LS_PARA.CSZLX); 
   DIGIT_ARRAY  := ARRAY_AGG(:LS_PARA.DIGTV); 
   CHARV_ARRAY  := ARRAY_AGG(:LS_PARA.CHARV); 
--将取得的参数信息整理成数组；
FOR PARA_INDEX IN 1 .. CARDINALITY(:PARA_ARRAY) DO   
if :PARA_ARRAY[:PARA_INDEX] = 'ALPHA'
then  
if :MODE_ARRAY[:PARA_INDEX] = 1
then
L_alpha :=:alpha;
else
L_alpha :=:DIGIT_ARRAY[:PARA_INDEX];
end if;
end if;

if :PARA_ARRAY[:PARA_INDEX] = 'BETA'
then  
if :MODE_ARRAY[:PARA_INDEX] = 1
then
L_beta :=:BETA;
else
L_beta :=:DIGIT_ARRAY[:PARA_INDEX];
end if;
end if;

if :PARA_ARRAY[:PARA_INDEX] = 'GAMMA'
then  
if :MODE_ARRAY[:PARA_INDEX] = 1
then
L_gamma :=:GAMMA;
else
L_gamma :=:DIGIT_ARRAY[:PARA_INDEX];
end if;
end if;
end for;

else
L_alpha :=:alpha;
L_beta :=:BETA;
L_gamma :=:GAMMA;
end if;

DELETE FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_DATA; --数据表

SQL_STR:='insert into SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_DATA (select num,KZSPXSSL from (SELECT distinct CALMONTH,ROW_NUMBER() over() as num,SUM("KZSPXSSL") AS KZSPXSSL FROM _SYS_BIC."sinopec.zbyy.xsyy.z1-fyp/Z1FX_XSSPLSFX" where '|| :SQLWHERE ||' GROUP BY CALMONTH ORDER  BY CALMONTH ASC))'; 
EXEC :SQL_STR;

DELETE FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_DATA_ORIGINAL; --数据表

SQL_STR:='insert into SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_DATA_ORIGINAL (SELECT distinct CALMONTH,ROW_NUMBER() over() as num,SUM("KZSPXSSL") AS KZSPXSSL FROM _SYS_BIC."sinopec.zbyy.xsyy.z1-fyp/Z1FX_XSSPLSFX" where '|| :SQLWHERE ||' GROUP BY CALMONTH ORDER BY CALMONTH ASC)'; 
EXEC :SQL_STR;

    PAL_DATA = SELECT * FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_DATA;   
    
    select count(*) into l_count_real from :PAL_DATA;
    IF :l_count_real <= 7 THEN  --如果选择期间段内的加油站月度销量条目太少，比如只有一个月的销售数据。那么执行预测函数的时候报错。需要做控制
       message := '' ;
    ELSE
       message := 'CONTINUE' ;
    end IF;    
    
  
    IF :MESSAGE = 'CONTINUE' THEN --到月度的加油站基础数据条目够 - 执行预测    
        L_FSTNUM := :FSTNUM+1;
        L_AUTO := :AUTO;
    --参数表    

    DELETE FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL;
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('FORECAST_MODEL_NAME',null,null,'TESM');
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('OPTIMIZER_TIME_BUDGET',15,null,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('OPTIMIZER_RANDOM_SEED',5,null,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('THREAD_NUMBER',8,null,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('ALPHA',null,:L_alpha,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('BETA',null,:L_beta,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('GAMMA',null,:L_gamma,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('FORECAST_NUM',:L_FSTNUM,null,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('STARTTIME',0,null,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('CYCLE',3,null,null);
    INSERT INTO SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL VALUES ('FORECAST_AUTOMATIC',:L_AUTO,null,null);
        
    PAL_CONTROL = SELECT * FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_CONTROL;
    
    DELETE FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_PARAMETER;  --输出表（参数，均方误差，ALPHA,BETA,GAMMA）

    DELETE FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_RESULT;
    
   
    PAL_OUTPARAMETER_TBL = SELECT * FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_PARAMETER;
    PAL_RESULT = SELECT * FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_RESULT;
	
    call _SYS_AFL.ZFYP_GET_TRIPLESMOOTH(:PAL_DATA,:PAL_CONTROL,:PAL_OUTPARAMETER_TBL,:PAL_RESULT) with overview; 

    PAL_DATA_DETAIL = SELECT * FROM SINOPEC_YPXS.ZFYP_GET_TRIPLESMOOTH_DATA_ORIGINAL;

    RESULT = SELECT R.TIMESTAMP, R.MONTH, ROUND(R.DATA/1000,1) AS KF_REAL, 
             ROUND(F.VALUE/1000,1) AS KF_FORCAST
             FROM :PAL_DATA_DETAIL AS R
             LEFT JOIN :PAL_RESULT AS F
             ON R.TIMESTAMP = F.TIMESTAMP  
                       
             UNION 
           
             SELECT R.TIMESTAMP, R.MONTH, ROUND(R.DATA/1000,1) AS KF_REAL, 
             ROUND(F.VALUE/1000,1) AS KF_FORCAST
             FROM :PAL_DATA_DETAIL AS R
             RIGHT JOIN :PAL_RESULT AS F
             ON R.TIMESTAMP = F.TIMESTAMP 
             WHERE F.TIMESTAMP NOT IN
             (SELECT F.TIMESTAMP FROM :PAL_DATA_DETAIL AS R  inner JOIN :PAL_RESULT AS F   ON R.TIMESTAMP = F.TIMESTAMP);
       
       SELECT * FROM :RESULT;     
       select * from  :PAL_OUTPARAMETER_TBL;     
       
   ELSE --到月度的加油站基础数据条目够 - 不执行预测函数
         SELECT '' AS TIMESTAMP, '' AS CALMONTH, '' AS KF_REAL, '' AS TIME, '' AS KF_FORCAST
         FROM DUMMY;
   END IF;

drop table #LS_PARA;
end;
